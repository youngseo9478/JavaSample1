package prob;


/**
 * 
 * @author 원영서
 * @since 2017.11.09
 *
 */
public class BookMgr {
	
	Book[] bookList = new Book[50];
	int count = 0;
//	count : 배열의 인덱스를 관리하기위한 변수로 도서의 개수와 동일

	/**
	 * 기본 생성자
	 */
	public BookMgr(){
		
	}
	
	/**
	 * bookList라는 배열 변수를 초기화하는 생성자 메소드
	 * @param booklist 
	 */
	public BookMgr(Book[] booklist) {
		for (int i = count; i < booklist.length; i++) {
		
		★여기서 원래 bookList = booklist; 했었다.(주소바인딩 형식)
		bookList 50개 중에 3공간을 채운다고 생각했던 것이다.
		하지만 이렇게하면 bookList는 이제 3개짜리 Book배열을 갖는다는 의미가 된다.
		3개짜리 북배열의 주소를 대입한 것이기 때문에 50개짜리 배열은 아무도 가리키지않게된다(가비지대상).
		그러므로 count변수로 인덱스의 위치 즉, 북 배열단위로 한번에 대입하는 것이아니라 
		북 객체를 하나씩 꺼내서 각 bookList가 null인 자리에 하나씩 대입시켜줘야하는 것이다.(데이터바인딩 형식)
		
		count는 초기값이 0으로 0번 인덱스를 가리킬 수 있으며, 도서 목록이 하나도 없다는 의미이다.
		위에서 3개짜리 배열을 하나씩 대입하고 그 배열의 크기만큼 count값을 증가시켜주면 3이 증가해서
		count가 3이 된다. 다음에 북객체를 넣든, 북 배열을 받아서 넣든 bookList에 넣고자할때는 인덱스 값을
		count부터 해줘야 하는 것이다. 처음에는 count-1이라고 생각했으나 착각이었다.
		왜냐하면 책 목록 3개가 들어가면 [0],[1],[2]가 주소를 갖게되고 그다음에 값을 넣어야하므로 [3]이 맞다.
		그래서 for문을 이용할때도 i의 초기값을 그냥 count로 준 것이다. 
		
		this.bookList[i] = booklist[i];
		
		}
		count+=booklist.length;
	}

	/**
	 * Book객체를 bookList에 등록하는 메소드
	 * @param book
	 */
	public void addBook(Book book) {
		
		★북배열이 아닌 북객체를 하나만 넣으려고 할때에도 역시 하나를 넣은 다음
		count++해서 1 증가시켜주어야 다음 인덱스에 추가되는 북배열, 북 객체를 넣을 수 있다.
		역시 대입할 때 인덱스는 count여야 하는 것! 
		
		this.bookList[count] = book;
		count++;
	}
	
	/**
	 * 도서 목록을 출력하는 메소드
	 */
	public void printBookList(){
		System.out.println();
		System.out.println("=== 도서 목록===");
		for (int i = 0; i < count; i++) {
			
			★조건식을 boolList.length라고 해도 되지만 이번 같은 경우 50개짜리 배열이므로
			책이 5권밖에 안들어있어도 나머지 45개를 null로 찍어주기때문에 보기 복잡하여
			count보다 작을때까지만 찍어주는 것! 대입할떄는 count자리이지만 이제 새로 추가하는 것이
			아니고 출력하는 것이기때문에 다음자리의 인덱스를 가리키는 count에서 하나를 빼준 범위까지만
			출력해야한다.
			
			System.out.println(bookList[i].getTitle());
		}
	}
	
	/**
	 * 보유중인 도서의 가격 합계
	 */
	public void printTotalPrice(){
		int sum = 0;
		for (int i = 0; i < count; i++) {
			sum+=bookList[i].getPrice();
		}
		System.out.println();
		System.out.println("=== 책 가격의 총합 ===");
		System.out.printf("모든 책 가격의 합 : %d%n",sum);
	}

}